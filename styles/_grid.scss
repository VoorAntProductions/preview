/*============================================================================
  GRID
==============================================================================*/

// Mixins
// For the library to use only, you should not need to modify them at all.
@mixin grid-media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      $breakpoint-found: true;

      @media #{$declaration} {
        @content;
      }
    }
  }

  @if $breakpoint-found == false {
    @warn "Breakpoint '#{$media-query}' does not exist";
  }
}

@mixin silent-relative() {
  position: relative;
}

// Grid setup
.grid {
  @include clearfix;
  margin: 0 0 0 -#{$gutter};
}

ul.grid,
ul.grid-uniform {
  list-style: none;
  padding: 0;
}

.grid__item {
  float: left;
  padding-left: $gutter;
  width: 100%;
}

.grid__item-special {
  @include media-breakpoint-down(sm) {
    padding-left: 0px;
  }
}

// Grid reversed
.grid--rev {
  @extend .grid;
  direction: rtl;
  text-align: left;

  > .grid__item {
    direction: ltr;
    text-align: left;
    float: right;
  }
}

// Grid gutter
.grid--full {
  @extend .grid;
  margin-left: 0;

  > .grid__item {
    padding-left: 0;
  }
}

.grid--half {
  @extend .grid;
  margin-left: -$gutter/2;

  > .grid__item {
    padding-left: $gutter/2;
  }
}

.grid--x2 {
  @extend .grid;
  margin-left: -$gutter * 2;

  > .grid__item {
    padding-left: $gutter * 2;
  }
}

.grid--x3 {
  @extend .grid;
  margin-left: -$gutter * 3;

  > .grid__item {
    padding-left: $gutter * 3;
  }
}

.grid--mb-items-half {
  @extend .grid;
  margin-bottom: -$gutter/2;

  > .grid__item {
    margin-bottom: $gutter/2;
  }
}

.grid--mb-items {
  @extend .grid;
  margin-bottom: -$gutter;

  > .grid__item {
    margin-bottom: $gutter;
  }
}

.grid--mb2-items {
  @extend .grid;
  margin-bottom: -2 * $gutter;

  > .grid__item {
    margin-bottom: 2 * $gutter;
  }
}

.grid--mb3-items {
  @extend .grid;
  margin-bottom: -3 * $gutter;

  > .grid__item {
    margin-bottom: 3 * $gutter;
  }
}

// Widths
@mixin device-type($namespace: "") {
  // Whole
  @if $whole == true {
    .#{$namespace}one-whole {
      width: 100%;
    }
  }

  // Halves
  @if $halves == true {
    .#{$namespace}one-half {
      width: 50%;
    }
  }

  // Thirds
  @if $thirds == true {
    .#{$namespace}one-third {
      width: 33.333%;
    }
    .#{$namespace}two-thirds {
      width: 66.666%;
    }
  }

  // Quarters
  @if $quarters == true {
    .#{$namespace}one-quarter {
      width: 25%;
    }
    .#{$namespace}two-quarters {
      width: 50%;
    }
    .#{$namespace}three-quarters {
      width: 75%;
    }
  }

  // Fifths
  @if $fifths == true {
    .#{$namespace}one-fifth {
      width: 20%;
    }
    .#{$namespace}two-fifths {
      width: 40%;
    }
    .#{$namespace}three-fifths {
      width: 60%;
    }
    .#{$namespace}four-fifths {
      width: 80%;
    }
  }

  // Sixths
  @if $sixths == true {
    .#{$namespace}one-sixth {
      width: 16.666%;
    }
    .#{$namespace}two-sixths {
      width: 33.333%;
    }
    .#{$namespace}three-sixths {
      width: 50%;
    }
    .#{$namespace}four-sixths {
      width: 66.666%;
    }
    .#{$namespace}five-sixths {
      width: 83.333%;
    }
  }

  // Eighths
  @if $eighths == true {
    .#{$namespace}one-eighth {
      width: 12.5%;
    }
    .#{$namespace}two-eighths {
      width: 25%;
    }
    .#{$namespace}three-eighths {
      width: 37.5%;
    }
    .#{$namespace}four-eighths {
      width: 50%;
    }
    .#{$namespace}five-eighths {
      width: 62.5%;
    }
    .#{$namespace}six-eighths {
      width: 75%;
    }
    .#{$namespace}seven-eighths {
      width: 87.5%;
    }
  }

  // Tenths
  @if $tenths == true {
    .#{$namespace}one-tenth {
      width: 10%;
    }
    .#{$namespace}two-tenths {
      width: 20%;
    }
    .#{$namespace}three-tenths {
      width: 30%;
    }
    .#{$namespace}four-tenths {
      width: 40%;
    }
    .#{$namespace}five-tenths {
      width: 50%;
    }
    .#{$namespace}six-tenths {
      width: 60%;
    }
    .#{$namespace}seven-tenths {
      width: 70%;
    }
    .#{$namespace}eight-tenths {
      width: 80%;
    }
    .#{$namespace}nine-tenths {
      width: 90%;
    }
  }

  // Twelfths
  @if $twelfths == true {
    .#{$namespace}one-twelfth {
      width: 8.333%;
    }
    .#{$namespace}two-twelfths {
      width: 16.666%;
    }
    .#{$namespace}three-twelfths {
      width: 25%;
    }
    .#{$namespace}four-twelfths {
      width: 33.333%;
    }
    .#{$namespace}five-twelfths {
      width: 41.666%;
    }
    .#{$namespace}six-twelfths {
      width: 50%;
    }
    .#{$namespace}seven-twelfths {
      width: 58.333%;
    }
    .#{$namespace}eight-twelfths {
      width: 66.666%;
    }
    .#{$namespace}nine-twelfths {
      width: 75%;
    }
    .#{$namespace}ten-twelfths {
      width: 83.333%;
    }
    .#{$namespace}eleven-twelfths {
      width: 91.666%;
    }
  }
}

// Device helper
@mixin device-helper($namespace: "") {
  .#{$namespace}show {
    display: block !important;
  }
  .#{$namespace}hide {
    display: none !important;
  }

  .#{$namespace}text-left {
    text-align: left !important;
  }
  .#{$namespace}text-right {
    text-align: right !important;
  }
  .#{$namespace}text-center {
    text-align: center !important;
  }

  .#{$namespace}left {
    float: left !important;
  }
  .#{$namespace}right {
    float: right !important;
  }
}

// Regular, non-responsive width classes
@include device-type();
@include device-helper();

// Responsive classes
@each $name in $breakpoint-has-widths {
  @include grid-media-query($name) {
    @include device-type("#{$name}--");
    @include device-helper("#{$name}--");
  }
}
